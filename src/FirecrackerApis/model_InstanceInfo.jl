# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

mutable struct InstanceInfo <: SwaggerModel
    id::Union{ Nothing, String } # id
    state::Union{ Nothing, String } # state
    vmm_version::Union{ Nothing, String } # vmm_version

    function InstanceInfo(;id=nothing, state=nothing, vmm_version=nothing)
        o = new()
        set_field!(o, :id, id)
        set_field!(o, :state, state)
        set_field!(o, :vmm_version, vmm_version)
        o
    end
end # type InstanceInfo

const _name_map_InstanceInfo = Dict{String,Symbol}(["id"=>:id, "state"=>:state, "vmm_version"=>:vmm_version])
const _field_map_InstanceInfo = Dict{Symbol,String}([:id=>"id", :state=>"state", :vmm_version=>"vmm_version"])
Swagger.name_map(::Type{ InstanceInfo }) = _name_map_InstanceInfo
Swagger.field_map(::Type{ InstanceInfo }) = _field_map_InstanceInfo

const _allowed_InstanceInfo_state = ["Uninitialized", "Starting", "Running", "Halting", "Halted"]

function check_required(o::InstanceInfo)
    (o.id === nothing) && (return false)
    (o.vmm_version === nothing) && (return false)
    true
end

function validate_field(o::InstanceInfo, name::Symbol, val)
    if name === :state
        Swagger.validate_param(name, "InstanceInfo", :enum, val, _allowed_InstanceInfo_state)
    end
end
